From 2b16a1909c16d0bb02cb8995e2dc5bb1f8d2eaf1 Mon Sep 17 00:00:00 2001
From: Xaver Hugl <xaver.hugl@gmail.com>
Date: Thu, 24 Feb 2022 04:26:04 +0100
Subject: [PATCH 1/5] platform: check all outputs, not only enabled ones for
 the enabled flag

Otherwise it will block changes that will disable all currently enabled
outputs but also enable some currently disabled output

CCBUG: 450721
---
 src/platform.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/platform.cpp b/src/platform.cpp
index 92a0470b67..aef6043139 100644
--- a/src/platform.cpp
+++ b/src/platform.cpp
@@ -115,8 +115,8 @@ void Platform::requestOutputsChange(KWaylandServer::OutputConfigurationV2Interfa
         props->vrrPolicy = static_cast<RenderLoop::VrrPolicy>(changeset->vrrPolicy());
     }
 
-    const auto outputs = enabledOutputs();
-    bool allDisabled = !std::any_of(outputs.begin(), outputs.end(), [&cfg](const auto &output){
+    const auto allOutputs = outputs();
+    bool allDisabled = !std::any_of(allOutputs.begin(), allOutputs.end(), [&cfg](const auto &output){
         auto o = qobject_cast<AbstractWaylandOutput*>(output);
         if (!o) {
             qCWarning(KWIN_CORE) << "Platform::requestOutputsChange should only be called for Wayland platforms!";
-- 
GitLab


From 34fc6cb7d751a58d273ec095c7ebe08ac5501210 Mon Sep 17 00:00:00 2001
From: Xaver Hugl <xaver.hugl@gmail.com>
Date: Thu, 24 Feb 2022 05:36:26 +0100
Subject: [PATCH 2/5] output changes: handle to-be-enabled outputs first

This prevents situations where we have no enabled outputs
---
 src/backends/drm/drm_backend.cpp | 21 ++++++++++++++++-----
 src/platform.cpp                 | 12 ++++++++++++
 2 files changed, 28 insertions(+), 5 deletions(-)

diff --git a/src/backends/drm/drm_backend.cpp b/src/backends/drm/drm_backend.cpp
index 73c59a81ad..2c1f3704b7 100644
--- a/src/backends/drm/drm_backend.cpp
+++ b/src/backends/drm/drm_backend.cpp
@@ -635,7 +635,8 @@ DrmGpu *DrmBackend::findGpuByFd(int fd) const
 
 bool DrmBackend::applyOutputChanges(const WaylandOutputConfig &config)
 {
-    QVector<DrmOutput*> changed;
+    QVector<DrmOutput*> toBeEnabled;
+    QVector<DrmOutput*> toBeDisabled;
     for (const auto &gpu : qAsConst(m_gpus)) {
         const auto &outputs = gpu->outputs();
         for (const auto &o : outputs) {
@@ -645,10 +646,17 @@ bool DrmBackend::applyOutputChanges(const WaylandOutputConfig &config)
                 continue;
             }
             output->queueChanges(config);
-            changed << output;
+            if (config.constChangeSet(output)->enabled) {
+                toBeEnabled << output;
+            } else {
+                toBeDisabled << output;
+            }
         }
         if (!gpu->testPendingConfiguration()) {
-            for (const auto &output : qAsConst(changed)) {
+            for (const auto &output : qAsConst(toBeEnabled)) {
+                output->revertQueuedChanges();
+            }
+            for (const auto &output : qAsConst(toBeDisabled)) {
                 output->revertQueuedChanges();
             }
             return false;
@@ -656,7 +664,10 @@ bool DrmBackend::applyOutputChanges(const WaylandOutputConfig &config)
     }
     // first, apply changes to drm outputs.
     // This may remove the placeholder output and thus change m_outputs!
-    for (const auto &output : qAsConst(changed)) {
+    for (const auto &output : qAsConst(toBeEnabled)) {
+        output->applyQueuedChanges(config);
+    }
+    for (const auto &output : qAsConst(toBeDisabled)) {
         output->applyQueuedChanges(config);
     }
     // only then apply changes to the virtual outputs
@@ -664,7 +675,7 @@ bool DrmBackend::applyOutputChanges(const WaylandOutputConfig &config)
         if (!qobject_cast<DrmOutput*>(output)) {
             output->applyChanges(config);
         }
-    };
+    }
     if (Compositor::compositing()) {
         Compositor::self()->scene()->addRepaintFull();
     }
diff --git a/src/platform.cpp b/src/platform.cpp
index aef6043139..7752b2e110 100644
--- a/src/platform.cpp
+++ b/src/platform.cpp
@@ -152,7 +152,19 @@ void Platform::requestOutputsChange(KWaylandServer::OutputConfigurationV2Interfa
 bool Platform::applyOutputChanges(const WaylandOutputConfig &config)
 {
     const auto availableOutputs = outputs();
+    QVector<AbstractOutput*> toBeEnabledOutputs;
+    QVector<AbstractOutput*> toBeDisabledOutputs;
     for (const auto &output : availableOutputs) {
+        if (config.constChangeSet(qobject_cast<AbstractWaylandOutput*>(output))->enabled) {
+            toBeEnabledOutputs << output;
+        } else {
+            toBeDisabledOutputs << output;
+        }
+    }
+    for (const auto &output : toBeEnabledOutputs) {
+        static_cast<AbstractWaylandOutput*>(output)->applyChanges(config);
+    }
+    for (const auto &output : toBeDisabledOutputs) {
         static_cast<AbstractWaylandOutput*>(output)->applyChanges(config);
     }
     return true;
-- 
GitLab


From e910e65c38433821e12bc268758b92c29c1d7b72 Mon Sep 17 00:00:00 2001
From: Xaver Hugl <xaver.hugl@gmail.com>
Date: Thu, 24 Feb 2022 05:39:07 +0100
Subject: [PATCH 3/5] backends/drm: wait for pending pageflips before doing a
 modeset

If we don't, KWin may get a pageflip event for an output that is already
considered as being turned off
---
 src/backends/drm/drm_gpu.cpp | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/backends/drm/drm_gpu.cpp b/src/backends/drm/drm_gpu.cpp
index ea5a414912..ba7ab2ae66 100644
--- a/src/backends/drm/drm_gpu.cpp
+++ b/src/backends/drm/drm_gpu.cpp
@@ -733,6 +733,8 @@ bool DrmGpu::maybeModeset()
         // commit only once all pipelines are ready for presentation
         return true;
     }
+    // make sure there's no pending pageflips
+    waitIdle();
     const bool ok = DrmPipeline::commitPipelines(pipelines, DrmPipeline::CommitMode::CommitModeset, unusedObjects());
     for (DrmPipeline *pipeline : qAsConst(pipelines)) {
         if (pipeline->modesetPresentPending()) {
-- 
GitLab


From 920645402d659c934ac14210817610d4a304a8a3 Mon Sep 17 00:00:00 2001
From: Xaver Hugl <xaver.hugl@gmail.com>
Date: Thu, 24 Feb 2022 05:40:28 +0100
Subject: [PATCH 4/5] backends/drm: only change output properties if it's
 enabled

Setting output properties while they're disabled seems to cause issues in
KWin code elsewhere
---
 src/backends/drm/drm_output.cpp | 31 +++++++++++++++++--------------
 1 file changed, 17 insertions(+), 14 deletions(-)

diff --git a/src/backends/drm/drm_output.cpp b/src/backends/drm/drm_output.cpp
index 662e25ab88..836489fa76 100644
--- a/src/backends/drm/drm_output.cpp
+++ b/src/backends/drm/drm_output.cpp
@@ -428,20 +428,23 @@ void DrmOutput::applyQueuedChanges(const WaylandOutputConfig &config)
     Q_EMIT aboutToChange();
     m_pipeline->applyPendingChanges();
 
-    auto props = config.constChangeSet(this);
-    setEnabled(props->enabled && m_pipeline->pending.crtc);
-    moveTo(props->pos);
-    setScale(props->scale);
-    setTransformInternal(props->transform);
-
-    const auto &mode = m_pipeline->pending.mode;
-    setCurrentModeInternal(mode->size(), mode->refreshRate());
-    m_renderLoop->setRefreshRate(mode->refreshRate());
-    setOverscanInternal(m_pipeline->pending.overscan);
-    setRgbRangeInternal(m_pipeline->pending.rgbRange);
-    setVrrPolicy(props->vrrPolicy);
-
-    m_renderLoop->scheduleRepaint();
+    const auto props = config.constChangeSet(this);
+    const bool enable = props->enabled && m_pipeline->pending.crtc;
+    m_gpu->platform()->enableOutput(this, enable);
+    setEnabled(enable);
+    if (enable) {
+        moveTo(props->pos);
+        setScale(props->scale);
+        setTransformInternal(props->transform);
+
+        const auto &mode = m_pipeline->pending.mode;
+        setCurrentModeInternal(mode->size(), mode->refreshRate());
+        m_renderLoop->setRefreshRate(mode->refreshRate());
+        setOverscanInternal(m_pipeline->pending.overscan);
+        setRgbRangeInternal(m_pipeline->pending.rgbRange);
+        setVrrPolicy(props->vrrPolicy);
+        m_renderLoop->scheduleRepaint();
+    }
     Q_EMIT changed();
 }
 
-- 
GitLab


From 78d3c1fe5154d99dde4794571989b8eb602f1bc3 Mon Sep 17 00:00:00 2001
From: Xaver Hugl <xaver.hugl@gmail.com>
Date: Thu, 24 Feb 2022 05:41:08 +0100
Subject: [PATCH 5/5] backends/drm: don't change the configuration while KWin
 is terminating

---
 src/backends/drm/drm_backend.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/backends/drm/drm_backend.cpp b/src/backends/drm/drm_backend.cpp
index 2c1f3704b7..bc2ab005c3 100644
--- a/src/backends/drm/drm_backend.cpp
+++ b/src/backends/drm/drm_backend.cpp
@@ -508,7 +508,7 @@ void DrmBackend::enableOutput(DrmAbstractOutput *output, bool enable)
             m_placeholderFilter.reset();
         }
     } else {
-        if (m_enabledOutputs.count() == 1 && m_outputs.count() > 1) {
+        if (m_enabledOutputs.count() == 1 && m_outputs.count() > 1 && !kwinApp()->isTerminating()) {
             auto outputs = m_outputs;
             outputs.removeOne(output);
             if (!readOutputsConfiguration(outputs)) {
-- 
GitLab

